apply plugin: 'findbugs'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'maven'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

// Disable strict doclint - http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

ext {
    jacocoVersion = '0.7.5.201505241946'
}

findbugs {
    ignoreFailures = true
    reportLevel = 'low'
}

findbugsMain {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

jacoco {
    toolVersion = jacocoVersion
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile 'org.ow2.asm:asm:5.1'

    testCompile gradleTestKit()
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:3.2.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.objenesis:objenesis:1.2'
}

test {
    filter {
        includeTestsMatching '*Spec'
    }
}

task createPluginClasspath {
    def outputDir = file("${buildDir}/resources/test")

    inputs.files sourceSets.test.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("${outputDir}/plugin-classpath.txt").text = sourceSets.test.runtimeClasspath.join('\n',)
    }
}

// Always execute the tests -- needed for Jenkins to be happy
test.outputs.upToDateWhen { false }

// Build the plugin classpath for the Gradle Test Kit
test.dependsOn(['createPluginClasspath'])

/*
 * Set the Jacoco generate report task to not cache and set it to
 * run automatically after the "test" task.
 */
project.tasks.jacocoTestReport.outputs.upToDateWhen { false }
test.finalizedBy(project.tasks.jacocoTestReport)