apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'license'
apply plugin: 'cobertura'

group = 'org.gradle.plugins'
version = '1.0.0-SNAPSHOT'

description = "Provides utility tasks to work with dependencies like analyzing, resolving and updating."

sourceCompatibility = '1.7'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.7.0'
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.4'
    }
}

ext {
    spockVersion = '0.7-groovy-1.8' // Gradle API currently uses 1.8.6 of Groovy and there is no way to exclude/replace it (currently).
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.ow2.asm:asm:5.0.1'

    testCompile("org.spockframework:spock-core:$spockVersion") {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:2.2.2'
    testCompile 'junit:junit-dep:4.11'
    testCompile 'org.objenesis:objenesis:1.2'
}

test {
    filter {
        includeTestsMatching "*Spec"
    }
}

cobertura {
    coverageFormats = ['html', 'xml']
    coverageIgnoreTrivial = true
    coverageIgnores = ['org.slf4j.Logger.*']
    coverageReportDir = new File("$buildDir/reports/cobertura")
}

license {
    header rootProject.file('LICENSE_HEADER')
    strictCheck true
    mapping {
        java='SLASHSTAR_STYLE'
        groovy='SLASHSTAR_STYLE'
    }
}

test.finalizedBy(project.tasks.cobertura)